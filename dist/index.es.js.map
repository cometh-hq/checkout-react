{"version":3,"file":"index.es.js","sources":["../src/hooks/CheckoutSDK.tsx","../src/components/CheckoutButton.tsx"],"sourcesContent":["import { CheckoutAPI, Transaction } from \"@cometh/checkout-sdk\"\nimport { useCallback, useEffect, useMemo, useState } from \"react\"\n\nconst TRANSACTION_POLLING_INTERVAL = 1000\nexport enum TransactionStatus {\n  INITIATED = \"initiated\",\n  CASHED = \"cashed\",\n  RELAYED = \"relayed\",\n  REVERTED = \"reverted\",\n  CANCELLED = \"cancelled\",\n  COMPLETED = \"completed\"\n}\nconst FINAL_TRANSACTION_STATUSES = [\n  TransactionStatus.REVERTED,\n  TransactionStatus.CANCELLED,\n  TransactionStatus.COMPLETED\n]\n\nfunction _getCheckoutApi(\n  apikey: string,\n  apiurl: string = \"https://checkout.cometh.io/v1\"\n): CheckoutAPI {\n  return new CheckoutAPI({\n    BASE: apiurl,\n    HEADERS: {\n      apikey\n    }\n  })\n}\n\nexport function useCheckoutClient(\n  apikey: string,\n  apiurl?: string\n): CheckoutAPI {\n  const checkoutApi = useMemo(\n    () => _getCheckoutApi(apikey, apiurl),\n    [apikey, apiurl]\n  )\n  return checkoutApi\n}\n\nexport const useCheckoutSession = (\n  apikey: string,\n  apiUrl: string | undefined,\n  productId: number,\n  userAddress: string,\n  email?: string,\n  parameters?: Record<string, unknown>,\n  successUrl?: string,\n  failUrl?: string,\n  openInNewTab?: boolean,\n  onError?: (error: unknown) => void,\n  onNewTransaction?: (transactionId: string) => void | Promise<void>\n) => {\n  const checkoutClient = useCheckoutClient(apikey, apiUrl)\n  const [isLoading, setIsLoading] = useState(false)\n\n  const redirectToCheckoutSession = useCallback(async () => {\n    try {\n      setIsLoading(true)\n      const checkoutSession =\n        await checkoutClient.checkoutSessions.createCheckoutSession({\n          requestBody: {\n            productId,\n            userAddress,\n            email,\n            parameters,\n            successUrl,\n            failUrl\n          }\n        })\n      if (onNewTransaction) {\n        onNewTransaction(checkoutSession.transactionId)\n      }\n      if (openInNewTab) {\n        // Create a link to avoid popup blockers after an async action\n        const link = document.createElement(\"a\")\n        link.href = checkoutSession.url\n        link.target = \"_blank\"\n        link.click()\n        link.remove()\n        return\n      } else {\n        window.location.href = checkoutSession.url\n      }\n    } catch (error) {\n      console.error(\"Error during redirection\", error)\n      if (onError) {\n        onError(error)\n      }\n    } finally {\n      setIsLoading(false)\n    }\n  }, [\n    checkoutClient,\n    productId,\n    userAddress,\n    email,\n    parameters,\n    successUrl,\n    failUrl,\n    openInNewTab,\n    onError,\n    onNewTransaction\n  ])\n\n  return { isLoading, redirectToCheckoutSession }\n}\n\nexport const useWaitForTransaction = (\n  apikey: string,\n  apiUrl: string | undefined,\n  transactionId: string\n) => {\n  const checkoutClient = useCheckoutClient(apikey, apiUrl)\n  const [isLoading, setIsLoading] = useState(true)\n  const [transaction, setTransaction] = useState<Transaction | null>(null)\n  const [error, setError] = useState<unknown | null>(null)\n\n  const waitForTransaction = useCallback(async () => {\n    try {\n      setIsLoading(true)\n      const transaction = await checkoutClient.transactions.getTransactionById({\n        transactionId\n      })\n      if (\n        FINAL_TRANSACTION_STATUSES.includes(\n          transaction.status as TransactionStatus\n        )\n      ) {\n        setTransaction(transaction)\n        setIsLoading(false)\n      } else {\n        setTimeout(waitForTransaction, TRANSACTION_POLLING_INTERVAL)\n      }\n    } catch (error) {\n      console.error(\"Error during transaction polling\", error)\n      setError(error)\n      setIsLoading(false)\n    }\n  }, [checkoutClient, transactionId])\n\n  useEffect(() => {\n    waitForTransaction()\n  }, [waitForTransaction])\n\n  return { isLoading, transaction, error }\n}\n","import React from \"react\"\nimport { useCheckoutSession } from \"../hooks/CheckoutSDK\"\n\nexport type ButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement>\n\nexport type CheckoutButtonProps = ButtonProps & {\n  /**\n   * The API key for authentication.\n   */\n  apikey: string\n\n  /**\n   * Optional API URL override.\n   */\n  apiUrl?: string\n\n  /**\n   * The ID of the product to checkout.\n   */\n  productId: number\n\n  /**\n   * The wallet address of the user.\n   */\n  userAddress: string\n\n  /**\n   * Optional email of the user to prefill the checkout form.\n   */\n  email?: string\n\n  /**\n   * Optional additional parameters.\n   */\n  parameters?: Record<string, unknown>\n\n  /**\n   * URL to redirect upon successful checkout.\n   */\n  successUrl?: string\n\n  /**\n   * URL to redirect upon checkout failure.\n   */\n  failUrl?: string\n\n  /**\n   * Whether to open the checkout session in a new tab.\n   */\n  openInNewTab?: boolean\n\n  /**\n   * The content of the button.\n   */\n  children?: React.ReactNode\n\n  /**\n   * Component to display while loading.\n   */\n  loadingComponent?: React.ReactNode\n\n  /**\n   * Callback function to handle a new transaction ID. Called right before redirecting to the checkout session.\n   */\n  onNewTransaction?: (transactionId: string) => void\n\n  /**\n   * Callback function to handle errors.\n   */\n  onError?: (error: unknown) => void | Promise<void>\n}\n\nexport const CheckoutButton: React.FC<CheckoutButtonProps> = ({\n  apikey,\n  apiUrl,\n  productId,\n  userAddress,\n  email,\n  parameters,\n  successUrl,\n  failUrl,\n  children,\n  loadingComponent,\n  openInNewTab,\n  onError,\n  onNewTransaction,\n  ...buttonProps\n}) => {\n  const { isLoading, redirectToCheckoutSession } = useCheckoutSession(\n    apikey,\n    apiUrl,\n    productId,\n    userAddress,\n    email,\n    parameters,\n    successUrl,\n    failUrl,\n    openInNewTab,\n    onError,\n    onNewTransaction\n  )\n\n  return (\n    <button {...buttonProps} onClick={redirectToCheckoutSession}>\n      {isLoading\n        ? loadingComponent\n          ? loadingComponent\n          : \"Redirecting...\"\n        : children\n          ? children\n          : \"Checkout now\"}\n    </button>\n  )\n}\n"],"names":["TRANSACTION_POLLING_INTERVAL","TransactionStatus","FINAL_TRANSACTION_STATUSES","_getCheckoutApi","apikey","apiurl","CheckoutAPI","useCheckoutClient","useMemo","useCheckoutSession","apiUrl","productId","userAddress","email","parameters","successUrl","failUrl","openInNewTab","onError","onNewTransaction","checkoutClient","isLoading","setIsLoading","useState","redirectToCheckoutSession","useCallback","checkoutSession","link","error","useWaitForTransaction","transactionId","transaction","setTransaction","setError","waitForTransaction","useEffect","CheckoutButton","children","loadingComponent","buttonProps","React"],"mappings":"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"}