{"version":3,"file":"index.cjs.js","sources":["../src/hooks/CheckoutSDK.tsx","../src/components/CheckoutButton.tsx"],"sourcesContent":["import { CheckoutAPI, Transaction } from \"@cometh/checkout-sdk\"\nimport { useCallback, useEffect, useMemo, useState } from \"react\"\n\nconst TRANSACTION_POLLING_INTERVAL = 1000\nexport enum TransactionStatus {\n  INITIATED = \"initiated\",\n  CASHED = \"cashed\",\n  RELAYED = \"relayed\",\n  REVERTED = \"reverted\",\n  CANCELLED = \"cancelled\",\n  COMPLETED = \"completed\"\n}\nconst FINAL_TRANSACTION_STATUSES = [\n  TransactionStatus.REVERTED,\n  TransactionStatus.CANCELLED,\n  TransactionStatus.COMPLETED\n]\n\nfunction _getCheckoutApi(\n  apikey: string,\n  apiurl: string = \"https://checkout.cometh.io/v1\"\n): CheckoutAPI {\n  return new CheckoutAPI({\n    BASE: apiurl,\n    HEADERS: {\n      apikey\n    }\n  })\n}\n\nexport function useCheckoutClient(\n  apikey: string,\n  apiurl?: string\n): CheckoutAPI {\n  const checkoutApi = useMemo(\n    () => _getCheckoutApi(apikey, apiurl),\n    [apikey, apiurl]\n  )\n  return checkoutApi\n}\n\nexport const useCheckoutSession = (\n  apikey: string,\n  apiUrl: string | undefined,\n  productId: number,\n  userAddress: string,\n  email?: string,\n  parameters?: Record<string, unknown>,\n  successUrl?: string,\n  failUrl?: string,\n  openInNewTab?: boolean,\n  onError?: (error: unknown) => void,\n  onNewTransaction?: (transactionId: string) => void | Promise<void>\n) => {\n  const checkoutClient = useCheckoutClient(apikey, apiUrl)\n  const [isLoading, setIsLoading] = useState(false)\n\n  const redirectToCheckoutSession = useCallback(async () => {\n    try {\n      setIsLoading(true)\n      const checkoutSession =\n        await checkoutClient.checkoutSessions.createCheckoutSession({\n          requestBody: {\n            productId,\n            userAddress,\n            email,\n            parameters,\n            successUrl,\n            failUrl\n          }\n        })\n      if (onNewTransaction) {\n        onNewTransaction(checkoutSession.transactionId)\n      }\n      if (openInNewTab) {\n        // Create a link to avoid popup blockers after an async action\n        const link = document.createElement(\"a\")\n        link.href = checkoutSession.url\n        link.target = \"_blank\"\n        link.click()\n        link.remove()\n        return\n      } else {\n        window.location.href = checkoutSession.url\n      }\n    } catch (error) {\n      console.error(\"Error during redirection\", error)\n      if (onError) {\n        onError(error)\n      }\n    } finally {\n      setIsLoading(false)\n    }\n  }, [\n    checkoutClient,\n    productId,\n    userAddress,\n    email,\n    parameters,\n    successUrl,\n    failUrl,\n    openInNewTab,\n    onError,\n    onNewTransaction\n  ])\n\n  return { isLoading, redirectToCheckoutSession }\n}\n\nexport const useWaitForTransaction = (\n  apikey: string,\n  apiUrl: string | undefined,\n  transactionId: string\n) => {\n  const checkoutClient = useCheckoutClient(apikey, apiUrl)\n  const [isLoading, setIsLoading] = useState(true)\n  const [transaction, setTransaction] = useState<Transaction | null>(null)\n  const [error, setError] = useState<unknown | null>(null)\n\n  const waitForTransaction = useCallback(async () => {\n    try {\n      setIsLoading(true)\n      const transaction = await checkoutClient.transactions.getTransactionById({\n        transactionId\n      })\n      if (\n        FINAL_TRANSACTION_STATUSES.includes(\n          transaction.status as TransactionStatus\n        )\n      ) {\n        setTransaction(transaction)\n        setIsLoading(false)\n      } else {\n        setTimeout(waitForTransaction, TRANSACTION_POLLING_INTERVAL)\n      }\n    } catch (error) {\n      console.error(\"Error during transaction polling\", error)\n      setError(error)\n      setIsLoading(false)\n    }\n  }, [checkoutClient, transactionId])\n\n  useEffect(() => {\n    waitForTransaction()\n  }, [waitForTransaction])\n\n  return { isLoading, transaction, error }\n}\n","import React from \"react\"\nimport { useCheckoutSession } from \"../hooks/CheckoutSDK\"\n\nexport type ButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement>\n\nexport type CheckoutButtonProps = ButtonProps & {\n  /**\n   * The API key for authentication.\n   */\n  apikey: string\n\n  /**\n   * Optional API URL override.\n   */\n  apiUrl?: string\n\n  /**\n   * The ID of the product to checkout.\n   */\n  productId: number\n\n  /**\n   * The wallet address of the user.\n   */\n  userAddress: string\n\n  /**\n   * Optional email of the user to prefill the checkout form.\n   */\n  email?: string\n\n  /**\n   * Optional additional parameters.\n   */\n  parameters?: Record<string, unknown>\n\n  /**\n   * URL to redirect upon successful checkout.\n   */\n  successUrl?: string\n\n  /**\n   * URL to redirect upon checkout failure.\n   */\n  failUrl?: string\n\n  /**\n   * Whether to open the checkout session in a new tab.\n   */\n  openInNewTab?: boolean\n\n  /**\n   * The content of the button.\n   */\n  children?: React.ReactNode\n\n  /**\n   * Component to display while loading.\n   */\n  loadingComponent?: React.ReactNode\n\n  /**\n   * Callback function to handle a new transaction ID. Called right before redirecting to the checkout session.\n   */\n  onNewTransaction?: (transactionId: string) => void\n\n  /**\n   * Callback function to handle errors.\n   */\n  onError?: (error: unknown) => void | Promise<void>\n}\n\nexport const CheckoutButton: React.FC<CheckoutButtonProps> = ({\n  apikey,\n  apiUrl,\n  productId,\n  userAddress,\n  email,\n  parameters,\n  successUrl,\n  failUrl,\n  children,\n  loadingComponent,\n  openInNewTab,\n  onError,\n  onNewTransaction,\n  ...buttonProps\n}) => {\n  const { isLoading, redirectToCheckoutSession } = useCheckoutSession(\n    apikey,\n    apiUrl,\n    productId,\n    userAddress,\n    email,\n    parameters,\n    successUrl,\n    failUrl,\n    openInNewTab,\n    onError,\n    onNewTransaction\n  )\n\n  return (\n    <button {...buttonProps} onClick={redirectToCheckoutSession}>\n      {isLoading\n        ? loadingComponent\n          ? loadingComponent\n          : \"Redirecting...\"\n        : children\n          ? children\n          : \"Checkout now\"}\n    </button>\n  )\n}\n"],"names":["TRANSACTION_POLLING_INTERVAL","TransactionStatus","FINAL_TRANSACTION_STATUSES","_getCheckoutApi","apikey","apiurl","CheckoutAPI","useCheckoutClient","useMemo","useCheckoutSession","apiUrl","productId","userAddress","email","parameters","successUrl","failUrl","openInNewTab","onError","onNewTransaction","checkoutClient","isLoading","setIsLoading","useState","redirectToCheckoutSession","useCallback","checkoutSession","link","error","useWaitForTransaction","transactionId","transaction","setTransaction","setError","waitForTransaction","useEffect","CheckoutButton","children","loadingComponent","buttonProps","React"],"mappings":"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"}